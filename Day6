1) class movie creation

class movie {

  constructor(title,ratings,studio ) {
    this.title = title; 
    this.ratings = ratings || 'PG'; 
    this.studio = studio ;  
  }
  getPG(arr=[`${this.title}; ${this.studio}; ${ this.ratings}`]) {let newarr=[]
     if( `${this.ratings}` == 'PG')
      {
     newarr.push(`${this.title}; ${this.studio}; ${ this.ratings}`)
     arr = newarr
     console.log( arr ) ;
     return arr
     }console.log(`${this.title}; ${this.studio}; ${ this.ratings}`)
     
  }
  
}
const movie1 = new movie('Good nigth', 'PG13', 'Million Doller Studio');
const movie2 = new movie('Fast X','','Perfect Storm Entertainment, Universal Pictures');
const movie3 = new movie('Bahubali 1','PG13','Arka Media Works');
const movie4 = new movie('Bahubali 2','R','Arka Media Works');
const movie5 = new movie('PS2','PG','Madras Talkies,');
movie1.getPG();
movie2.getPG();
movie3.getPG();
movie4.getPG();
movie5.getPG();
const movie6 = new movie('Casino Royale','PG13','Eon Productions');
movie6.getPG();

2)UML to typescript

class Circle {
  private radius: number;
  private color: string;

  constructor(radius: number, color: string) {
    this.radius = radius;
    this.color = color;
  }

  getRadius(): number {
    return this.radius;
  }

  setRadius(radius: number): void {
    this.radius = radius;
  }

  getColor(): string {
    return this.color;
  }

  setColor(color: string): void {
    this.color = color;
  }

  getArea(): number {
    return Math.PI * Math.pow(this.radius, 2);
  }

  getCircumference(): number {
    return 2 * Math.PI * this.radius;
  }

  toString(): string {
    return `Circle - radius: ${this.radius}, color: ${this.color}`;
  }
}

3) Write a “person” class to hold all the details.

class Person {
 
  constructor(name, age, email) {
    this.name = name;
    this.age = age;
    this.email = email;
  }

  getName() {
    return this.name;
  }

  setName(name= "") {
    this.name = name;
  }

  getAge() {
    return this.age;
  }

  setAge(age) {
    this.age = age;
  }

  getEmail() {
    return this.email;
  }

  setEmail(email) {
    this.email = email;
  }
}
let class1 = new Person("krish",23,"@gmail.com");

console.log(class1.getName())
console.log(class1.getEmail())
class1.setName("Navee")
console.log(class1.getName())


4)Uber price calculation

class Uber {
  constructor(pricePerKm, pricePerMinute) {
    this._pricePerKm = pricePerKm;
    this._pricePerMinute = pricePerMinute;
  }

  calculatePrice(distanceInKm, timeInMinutes) {
    const price = distanceInKm * this._pricePerKm + timeInMinutes * this._pricePerMinute;
    return price;
  }
}

const uberX = new Uber(10, 2); 
const distance = 5; 
const time = 15; 
const totalPrice = uberX.calculatePrice(distance, time);
console.log("Total price:", totalPrice);
